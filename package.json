{
	"name": "codetowin",
	"displayName": "Code To Win",
	"description": "Parse Test Cases From Coding Websites, Compile/Run and many other features",
	"publisher": "Arpan",
	"icon": "image/codetowinpf.png",
	"repository": {
		"type": "git",
		"url": "https://github.com/ArpanKrChakraborty/code-to-win.git"
	},
	"bugs": {
		"url": "https://github.com/ArpanKrChakraborty/code-to-win/issues",
		"email": "arpanrkmgec@gmail.com"
	},
	"author": {
		"name": "Arpan Kumar Chakraborty",
		"email": "arpanrkmgec@gmail.com"
	},
	"version": "1.0.1",
	"engines": {
		"vscode": "^1.46.0"
	},
	"license": "SEE LICENSE IN LICENSE.txt",
	"keywords": [
		"ctw",
		"codewin"
	],
	"categories": [
		"Programming Languages",
		"Snippets"
	],
	"activationEvents": [
		"*"
	],
	"main": "./extension.js",
	"contributes": {
		"commands": [
			{
				"command": "codetowin.newContest",
				"title": "New Contest",
				"category": "Code To Win"
			},
			{
				"command": "codetowin.compileRun",
				"title": "Compile And Run Against Parsed Test Cases",
				"category": "Code To Win"
			},
			{
				"command": "codetowin.compileAndRun",
				"title": "Compile And Run (Interactive Input)",
				"category": "Code To Win"
			},
			{
				"command": "codetowin.addCustomTestCase",
				"title": "Add New Test Case",
				"category": "Code To Win"
			},
			{
				"command": "codetowin.readSnippets",
				"title": "Add/Update Snippets",
				"category": "Code To Win"
			}
		],
		"configuration": {
			"title": "Code To Win",
			"properties": {
				"codetowin.browserPath": {
					"type": "string",
					"description": "Path to binaries/executable of Chrome/Chromium/Firefox-Nightly"
				},
				"codetowin.CppVersion": {
					"type": "string",
					"default": "c++11",
					"enum": [
						"c++98",
						"c++03",
						"c++11",
						"c++14",
						"c++17",
						"c++20"
					]
				},
				"codetowin.cVersion": {
					"type": "string",
					"default": "c11",
					"enum": [
						"c99",
						"c11"
					]
				},
				"codetowin.flags.c": {
					"type": "string",
					"description": "Space seperated flags passed to gcc ( for C) while compiling your file. Example \"-O2 -Wall\""
				},
				"codetowin.flags.cpp": {
					"type": "string",
					"description": "Space seperated additional flags passed to g++ ( for C++ ) while compiling your file. Example \"-Wall -Ofast\""
				},
				"codetowin.flags.java": {
					"type": "string",
					"description": "Space seperated additional flags passed to JAVA compiler while compiling your file. Example \"-Xmx4M\""
				},
				"codetowin.flags.python": {
					"type": "string",
					"description": "Space seperated additional flags passed to Python compiler while compiling your file. Example \"-u -Wdefault\""
				},
				"codetowin.snippets": {
					"description": "Path to Snippets Folder",
					"type": "string",
					"format": "uri"
				}
			}
		},
		"keybindings": [
			{
				"command": "codetowin.newContest",
				"key": "ctrl+n"
			},
			{
				"command": "codetowin.compileRun",
				"key": "f5",
				"when": "editorTextFocus"
			},
			{
				"command": "codetowin.compileAndRun",
				"key": "f6",
				"when": "editorTextFocus"
			},
			{
				"command": "codetowin.addCustomTestCase",
				"key": "ctrl+t",
				"when": "editorTextFocus"
			}
		],
		"snippets": [
			{
				"language": "cpp",
				"path": "./snippets/cpp.json"
			},
			{
				"language": "c",
				"path": "./snippets/c.json"
			},
			{
				"language": "java",
				"path": "./snippets/java.json"
			},
			{
				"language": "python",
				"path": "./snippets/python.json"
			}
		]
	},
	"scripts": {
		"lint": "eslint .",
		"pretest": "npm run lint",
		"test": "node ./test/runTest.js"
	},
	"devDependencies": {
		"@types/vscode": "^1.46.0",
		"@types/glob": "^7.1.1",
		"@types/mocha": "^7.0.2",
		"@types/node": "^13.11.0",
		"eslint": "^6.8.0",
		"glob": "^7.1.6",
		"mocha": "^7.1.2",
		"typescript": "^3.8.3",
		"vscode-test": "^1.3.0"
	},
	"dependencies": {
		"puppeteer-core": "^5.2.1"
	}
}
